# 클라우드 서비스
# 1. 90's 회사별로 자체 서버를 구축함 : 컴 한대당 2~3억 * 10대 이상 + 서버실 공간 + 주기적으로 교체 + 전문인력 여러명 = 파산 
# 2. IDC (integration data center) : 한 건물을 서버실로 만들어버림 -> 다른 회사에게 서버컴퓨터를 빌려주는 사업을 펼침. 서버 배포하려면 IDC에 방문해서 해야 함(단순 업데이트까지도!). 출입과정 자체가 지옥(보안문제로)
# 3. 클라우드 서비스(IDC) : 서버 배포와 업데이트를 온라인으로 할 수 있게 됨. IDC 접근이 온라인으로 가능해짐. 아마존(AWS)/마이크로소프트(Azure)/구글(구글 클라우드 플랫폼)

# EC2 : 가상 서버컴퓨터 임대 서비스. 
# AWS는 Free tier 서비스를 제공함 = EC2는 컴퓨팅 시간마다 비용이 청구됨 = 서버 컴퓨터가 켜져있는 시간을 계산해서 비용 청구함(놀고 있어도 돈내야함)
# 특정 컴퓨터 사양에 한해 한달 750시간 무료 = 잘만 쓰면 한달 내내 무료 (가입 후 1년까지) (2대 이상 빌리면 그거까지 합해서 시간이 2배 이상으로 계산됨...)
# CPU, 램, ssD, GPU, 네트워크 장치 = 무료로 쓰려면 -?
# 인스턴스: 컴퓨터 
# AMI: 아마존 머신 이미지 => OS의 ISO 이미지 
# 블럭(볼륨) : 하드 디스크. 저장공간 / 돈나감 => turn off 시킨 후 하드디스크 보관 시 보관료 받음 => 없앨 때 하드디스크까지 다 날려야함
# 보안 그룹 : 방화벽
# Elastic IP : 고정 IP (임대 시 기본설정은 유동IP) / 돈나감 => 255.255.255.255 중 하나를 고정으로 받는데 이걸 발급받은 후 인스턴스에 연결되어야만 무료. 인스턴스 종료 시 IP도 제거해야함

# EC2 세부설정 들어가기
# VPC + 서브넷 (가상존)
# IDC 가 공격당할 경우를 대비해 자동으로 다른 IDC에 분산 복원하는 기능이 있다 -> 이걸 vPC로 신청 가능하다. 그리고 돈이 나가지 =ㅅ= 두배 이상으로 (=멀티존 기능)
# 서브넷 : 각 IDC별로 접속 가능한 구역을 설정하는 세부기능

# 중지 옵션 : 중지는 하드랑 IP 비용이 나감. 종료로 설정해야 된다.
#  ssd iops : input output per seconds. 100 올릴 때마다 3~4달러씩 청구. 

# 보안그룹: 인바운드 / 아웃바운드
# 인바운드: 외부 컴퓨터에서 서버로 들어오는 요청을 어떻게 막을지
# 아웃바운드 : 서버에서 외부 컴퓨터에 주는 데이터를 어떻게 검열할지

# 키 페어 : 한번 발급되면 절대 재발급 안됨 . 잃어버리면 작살. 확장자는 '.pem'(펌키) 절대절대절대 github에 올리지 않을 것. 

# 서버 운영체제 : Ubuntu 18.04 LTS 18 메이저 버전 중 마지막으로 나온 버전